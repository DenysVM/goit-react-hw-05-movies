{"version":3,"file":"static/js/385.b14238b2.chunk.js","mappings":"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","sources":["components/MovieApi.js","components/MovieDetails.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// MovieApi.js\nconst API_KEY = '67a6af9ae04fc7f0bc30333e65dc36b5';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchTrendingMovies() {\n    const response = await fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n    if (!response.ok) {\n        throw new Error('Error fetching trending movies');\n    }\n    const data = await response.json();\n    return data.results;\n}\n\nasync function searchMovies(query) {\n    const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\n    if (!response.ok) {\n        throw new Error('Error searching movies');\n    }\n    const data = await response.json();\n    return data.results;\n}\n\nasync function getMovieDetails(movieId) {\n    const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n    if (!response.ok) {\n        throw new Error('Error fetching movie details');\n    }\n    const data = await response.json();\n    return data;\n}\n\nasync function getMovieCredits(movieId) {\n    const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n    if (!response.ok) {\n        throw new Error('Error fetching movie credits');\n    }\n    const data = await response.json();\n    return data;\n}\n\nasync function getMovieReviews(movieId) {\n    const response = await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    if (!response.ok) {\n        throw new Error('Error fetching movie reviews');\n    }\n    const data = await response.json();\n    return data.results;\n}\n\nexport {\n    fetchTrendingMovies,\n    searchMovies,\n    getMovieDetails,\n    getMovieCredits,\n    getMovieReviews,\n};\n","// MovieDetailsPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from './MovieApi';\n\nfunction MovieDetailsPage() {\n    const { movieId } = useParams();\n    const [movieDetails, setMovieDetails] = useState(null);\n\n    useEffect(() => {\n        async function fetchMovieDetails() {\n            try {\n                const details = await getMovieDetails(movieId);\n                setMovieDetails(details);\n            } catch (error) {\n                console.error('Error fetching movie details:', error);\n            }\n        }\n\n        fetchMovieDetails();\n    }, [movieId]);\n\n    if (!movieDetails) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <h1>{movieDetails.title}</h1>\n            <p>Release Date: {movieDetails.release_date}</p>\n            <p>Overview: {movieDetails.overview}</p>\n            {/* Додайте додаткову інформацію про фільм */}\n        </div>\n    );\n}\n\nexport default MovieDetailsPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","ok","Error","json","data","results","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","useParams","useState","movieDetails","setMovieDetails","useEffect","details","console","error","fetchMovieDetails","title","release_date","overview","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}